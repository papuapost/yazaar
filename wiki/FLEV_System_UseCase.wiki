#summary FLEV System UseCase Template (Issue 4)
#labels Phase-Requirements

==Narrative==

Miranda signs up for a use case that involves maintaining the set of people who particpate in an application workflow. Since it's a basic CRUD operation, she decided to use the FLEV widget. Miranda creates a "Contacts.html" page and a "Contacts.js" script page. 

The Contacts script constructs a working instance from the FlevBase object, and then configures the instance to edit Contact entries. Per the application architecture, she adds the Contacts constructor to the singleton MY namespace. 

{{{
MY.Contacts = function() {
    var oSelf = object(FlevBase);

   oSelf.COLUMN_HEADERS = [
        {key:"first_name", text:"First Name", sortable:true, resizeable:true, editor:"textbox", formClassName: "required", formTitle: "Enter employee's first name"},  
        {key:"last_name", text:"Last Name", sortable:true, resizeable:true, editor:"textbox", formClassName: "required", formTitle: "Enter employee's last name"},  
        {key:"extension", text:"Extension", sortable:true, resizeable:true, editor:"textbox", formClassName: "required", formTitle: "Enter extension or telephone number"},  
        {key:"username", text:"Username", sortable:true, resizeable:true, editor:"textbox", formClassName: "required", formTitle: "Enter employee's login name"},  
        {key:"hired", text:"Hire Date", sortable:true, resizeable:true, editor:"textbox", formClassName: "required", formTitle: "Enter hire date as MM/DD/YYYY"},  
        {key:"hours", text:"Hours", sortable:true, resizeable:true, editor:"textbox", formClassName: "required, validate-number", formTitle: "Enter hours scheduled per work week as a number"},  
    ];       

    oSelf.RESPONSE_SCHEMA = {
        fields: ["entry_key","last_name","first_name","extension","username","hired","hours","editor"]
    };            

    oSelf.CONFIGS = {
        caption: "EntryList", 
        summary: "List of matching entries",
        paginator:true,
        paginatorOptions: {
            rowsPerPage: 2, 
            dropdownOptions: [2,20,200]
        },
        rowSingleSelect: true                
    };            
    
    oSelf.oColumnHeaders = oSelf.COLUMN_HEADERS;
    oSelf.oResponseSchema = oSelf.RESPONSE_SCHEMA;
    oSelf.oConfigs = oSelf.CONFIGS;
    oSelf.sItemName = "last_name";
}}}

Since this will be the only flev widget on the page, she can use the default element names, and so those items do not need to be configured. 

To make it easy to test the widget, Miranda also adds a test dataset. 

{{{
    oSelf.LOCAL_DATA = { 
        result : [
            {entry_key: 'c5b6bbb1-66d6-49cb-9db6-743af6627828', last_name: 'Beeblebrox ', first_name: 'Zaphod ', extension: '555-123-4565', username: 'zaphie ', hired: '04/01/1978', hours: -1, editor: '1'},
            {entry_key: '7c424227-8e19-4fb5-b089-423cfca723e1', last_name: 'Yooden', first_name: 'Vranx', extension: '555-123-4566', username: 'conker', hired: '04/01/1978', hours: 37.5, editor: '1'},
            {entry_key: '9320ea40-0c01-43e8-9cec-8fb9b3928c2c', last_name: 'Halfrunt', first_name: 'Gag', extension: '555-123-4567', username: 'ziggy', hired: '04/01/1978', hours: 7, editor: '0'},
            {entry_key: '3b27c933-c1dc-4d85-9744-c7d9debae196', last_name: 'Android', first_name: 'Marvin', extension: '555-123-4568', username: 'blue', hired: '06/15/1978', hours: 161, editor: '1'},
            {entry_key: '554ff9e7-a6f5-478a-b76b-a666f5c54e40', last_name: 'McMillan', first_name: 'Tricia', extension: '555-123-4569', username: 'trillian', hired: '05/28/1978', hours: 37.5, editor:'0'},
        ]
    };  
}}}

Miranda creates the Contacts.html page by referring to one of the flev example pages. For the autocomplete filter, she adds her own list of field names. 

{{{
    <select id="elListForm_item" onchange="_Self.onFilterChange()">
        <option value="last_name" selected="selected">Last Name</option>
        <option value="first_name">First Name</option>
        <option value="username">Username</option>
    </select>
}}}}

To bootstrap the initial dataset, Miranda extends the my.js script to creates a ContactsLoad event and provide onContactLoadReturn call back handler.

    this.createEvent("contactsLoad");
    
    // ...

    my.oEvents.onContactsLoadReturn = function(oData) {
        YAHOO.log("contactsLoad Event");
        my.oEvents.fireEvent("contactsLoad", oData);
    };

Miranda subscribes the flev's load method to the contactLoad event. When the RPC call returns, it will fire the contactsLoad event, which will trigger the load method, bootstrapping the widget. 

{{{
    <script type="text/javascript">
        var fnReady = function() {
            var oView = new MY.View("elBody","Contacts");
            _Self = new MY.Contacts(); // Convenience "global" for this page.
            oView.oContent = _Self;
            my.oEvents.subscribe("contactsLoad", _Self.load, _Self);                       };
        YAHOO.util.Event.onContentReady("elBody",fnReady);
    </script>
}}}

But before trying the RPC method, Miranda configures the page to use the static test data first. 

   // Contacts.rpc.contactList(my.oEvents.onContactListReturn).call(ANVIL.channel);
   my.oEvents.onContactsLoadReturn(_Self.LOCAL_DATA); // static data

Once she is sure everything else is working, Miranda comments out the static data, and comments in the RPC method.

==Goal==

The most common workflow in any business application is Finder / Lister / Editor / Viewer or "FLEV". A FLEV widget would allow us to define a columnset and datasource once and use it to generate all four presentations.

|| *Level* || System Component || 
|| *Trigger* || Find matching entity to view or edit details  || 
|| *Primary Actor* || Developer ||

==Main Success Scenario (MSS)==

|| *Step* || *Action* ||
|| *1* ||   ||

==Extensions==

|| *Step* || *Extension Action*        ||
||        ||                           ||
|| 1a     || _Extension Action_        ||
|| .1     ||   ||

==Sample Code==

|| *Step* || Code ||
|| *1* ||{{{file reference}}} ||

{{{
 // code
}}}

=== Test Plans ===

_Action_ (#)
 * 

|| [http://code.google.com/p/yazaar/issues/detail?id=# Issue #] ||