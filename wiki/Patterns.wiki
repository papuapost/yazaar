#summary List of generic Application Use Cases and Ajax Coding Patterns (Issue 12)

= Application Use Cases and Ajax Coding Patterns =

See also 

 * [http://ajaxpatterns.org/Patterns AjaxPatterns.org]
 * [http://developer.yahoo.com/ypatterns/atoz.php Yahoo! Design Pattern Library]
 * [http://www.webcitation.org/5LcslAR2D Web Design Patterns]

== Programming Patterns  ==

|| Finely-grained document titles || Change the document title to match the application state ||
|| Create/Retrieve/Update/Delete || Provide a workflow for creating, retrieving, updating and deleting entities || 
|| Login and continue || Authenticate client from any public state and return to the original workflow || 
|| Server-side pagination || Retrieve and present only one block of a larger dataset at time, fetching additional items as needed. Applies to both Search Pagination and Item Pagination.||
|| Validate input || Confirm that data being submitted meets any data constraints, canceling the operation and reporting errors when found. ||
|| Role-based access || Base access to the application on a security role, with unauthenticated clients being placed into a "guest" role.  ||
|| Inline edit || Allow clients to change data in a cell directly, without otherwise changing the view context. ||
|| Inline delete/insert || Allow clients to select a table row to be deleted, or to insert a new row into the table, without otherwise chancing the view context. ||
|| Initial letter search || For a dataset field, provide a linked list of characters matching the first character of the dataset items. Selecting a letter filters the dataset for that initial character. May be combined with Search Pagination and Autocomplete. Differs from Alphanumeric Filter Links in that dataset is dynamically filtered. ||

== Functionality and Usability ==

|| Fault Error || Include a read-only fault area to publish system error messages ||
|| Tagged messages || Return a set of messages linked to specific display items, such as an input control ||
|| Inline messages || Present hints and error messages next to the relevant item ||
|| Interim data-entry save and restore  || During a data-entry task, periodically save the current state to a temporary area, and offer to restore the data later if the operation is interrupted ||
|| Exit guard || If client has made unsaved changes, prompt before changing the view  context (e.g. switching to another tab) ||
|| Child select (with add) || During a data-entry workflow, allow clients to search and select a related entity, adding a new entity if necessary, and returning to the original workflow ||
|| View state || Between server updates, preserve previous application state in an internal object, distinct from the working copy exposed to the client ||
|| Format output || Augment original data so as to enhance readability ||
|| Revert Edit || Restore original state to an data-entry form, undoing unsaved changes made by client || 
|| Direct state links || Provide a mechanism for proceeding directly to a common application states  ||
|| Find/Edit/List/View || Provide a coherent mechanism for finding, editing, listing, and viewing entities as part of a CRUD workflow ||
|| Return to state || Workaround HTTP post warnings by providing a link that will safely return to a previous state (e.g. search query). (JIRA) ||
|| Workflow Wizard || (JIRA) ||

== Ajax Coding Patterns ==

 * Placeholder DIVs
 * Configure object by parsing markup in a placeholder DIV
 * Save references to DOM elements as object properties 
 * Marker CSS styles 
 * try/catch browser incompatibilities
 * Power constructors 
 * Contextual instantiation (create on demand)
 * Idiomatic events



